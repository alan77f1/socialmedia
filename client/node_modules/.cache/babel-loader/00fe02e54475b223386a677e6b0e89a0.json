{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\buiva\\\\OneDrive\\\\M\\xE1y t\\xEDnh\\\\new\\\\instagram-clone\\\\client\\\\src\\\\components\\\\alert\\\\Alert.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { GLOBALTYPES } from \"../../redux/actions/globalTypes\";\nimport Loading from \"./Loading\";\nimport Toast from \"./Toast\";\n\nconst Notify = () => {\n  _s();\n\n  const {\n    alert\n  } = useSelector(state => state);\n  const dispatch = useDispatch();\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [alert.loading && /*#__PURE__*/_jsxDEV(Loading, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 25\n    }, this), alert.error && /*#__PURE__*/_jsxDEV(Toast, {\n      msg: {\n        title: \"Lỗi\",\n        body: alert.error\n      },\n      handleShow: () => dispatch({\n        type: GLOBALTYPES.ALERT,\n        payload: {}\n      }),\n      bgColor: \"bg-danger\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 9\n    }, this), alert.success && /*#__PURE__*/_jsxDEV(Toast, {\n      msg: {\n        title: \"Thành Công\",\n        body: alert.success\n      },\n      handleShow: () => dispatch({\n        type: GLOBALTYPES.ALERT,\n        payload: {}\n      }),\n      bgColor: \"bg-success\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Notify, \"nkVCJCUp54Uw4abul0ck9OkzP00=\", false, function () {\n  return [useSelector, useDispatch];\n});\n\n_c = Notify;\nexport default Notify;\n\nvar _c;\n\n$RefreshReg$(_c, \"Notify\");","map":{"version":3,"sources":["C:/Users/buiva/OneDrive/Máy tính/new/instagram-clone/client/src/components/alert/Alert.js"],"names":["React","useSelector","useDispatch","GLOBALTYPES","Loading","Toast","Notify","alert","state","dispatch","loading","error","title","body","type","ALERT","payload","success"],"mappings":";;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,WAAT,QAA4B,iCAA5B;AAEA,OAAOC,OAAP,MAAoB,WAApB;AACA,OAAOC,KAAP,MAAkB,SAAlB;;AAEA,MAAMC,MAAM,GAAG,MAAM;AAAA;;AACnB,QAAM;AAAEC,IAAAA;AAAF,MAAYN,WAAW,CAAEO,KAAD,IAAWA,KAAZ,CAA7B;AACA,QAAMC,QAAQ,GAAGP,WAAW,EAA5B;AAEA,sBACE;AAAA,eACGK,KAAK,CAACG,OAAN,iBAAiB,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,YADpB,EAGGH,KAAK,CAACI,KAAN,iBACC,QAAC,KAAD;AACE,MAAA,GAAG,EAAE;AAAEC,QAAAA,KAAK,EAAE,KAAT;AAAgBC,QAAAA,IAAI,EAAEN,KAAK,CAACI;AAA5B,OADP;AAEE,MAAA,UAAU,EAAE,MAAMF,QAAQ,CAAC;AAAEK,QAAAA,IAAI,EAAEX,WAAW,CAACY,KAApB;AAA2BC,QAAAA,OAAO,EAAE;AAApC,OAAD,CAF5B;AAGE,MAAA,OAAO,EAAC;AAHV;AAAA;AAAA;AAAA;AAAA,YAJJ,EAWGT,KAAK,CAACU,OAAN,iBACC,QAAC,KAAD;AACE,MAAA,GAAG,EAAE;AAAEL,QAAAA,KAAK,EAAE,YAAT;AAAuBC,QAAAA,IAAI,EAAEN,KAAK,CAACU;AAAnC,OADP;AAEE,MAAA,UAAU,EAAE,MAAMR,QAAQ,CAAC;AAAEK,QAAAA,IAAI,EAAEX,WAAW,CAACY,KAApB;AAA2BC,QAAAA,OAAO,EAAE;AAApC,OAAD,CAF5B;AAGE,MAAA,OAAO,EAAC;AAHV;AAAA;AAAA;AAAA;AAAA,YAZJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAqBD,CAzBD;;GAAMV,M;UACcL,W,EACDC,W;;;KAFbI,M;AA2BN,eAAeA,MAAf","sourcesContent":["import React from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { GLOBALTYPES } from \"../../redux/actions/globalTypes\";\r\n\r\nimport Loading from \"./Loading\";\r\nimport Toast from \"./Toast\";\r\n\r\nconst Notify = () => {\r\n  const { alert } = useSelector((state) => state);\r\n  const dispatch = useDispatch();\r\n\r\n  return (\r\n    <div>\r\n      {alert.loading && <Loading />}\r\n\r\n      {alert.error && (\r\n        <Toast\r\n          msg={{ title: \"Lỗi\", body: alert.error }}\r\n          handleShow={() => dispatch({ type: GLOBALTYPES.ALERT, payload: {} })}\r\n          bgColor=\"bg-danger\"\r\n        />\r\n      )}\r\n\r\n      {alert.success && (\r\n        <Toast\r\n          msg={{ title: \"Thành Công\", body: alert.success }}\r\n          handleShow={() => dispatch({ type: GLOBALTYPES.ALERT, payload: {} })}\r\n          bgColor=\"bg-success\"\r\n        />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Notify;\r\n"]},"metadata":{},"sourceType":"module"}