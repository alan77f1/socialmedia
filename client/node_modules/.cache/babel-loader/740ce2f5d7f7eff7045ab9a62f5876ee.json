{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\buiva\\\\OneDrive\\\\M\\xE1y t\\xEDnh\\\\new\\\\instagram-clone\\\\client\\\\src\\\\components\\\\message\\\\LeftSide.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useRef } from \"react\";\nimport UserCard from \"../UserCard\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { getDataAPI } from \"../../utils/fetchData\";\nimport { GLOBALTYPES } from \"../../redux/actions/globalTypes\";\nimport { useHistory, useParams } from \"react-router-dom\";\nimport { MESS_TYPES, getConversations } from \"../../redux/actions/messageAction\";\n\nconst LeftSide = () => {\n  _s();\n\n  const {\n    auth,\n    message,\n    online\n  } = useSelector(state => state);\n  const dispatch = useDispatch();\n  const [search, setSearch] = useState(\"\");\n  const [searchUsers, setSearchUsers] = useState([]);\n  const history = useHistory();\n  const {\n    id\n  } = useParams();\n  const pageEnd = useRef();\n  const [page, setPage] = useState(0);\n\n  const handleSearch = async e => {\n    e.preventDefault();\n    if (!search) return setSearchUsers([]);\n\n    try {\n      const res = await getDataAPI(`search?username=${search}`, auth.token);\n      setSearchUsers(res.data.users);\n    } catch (err) {\n      dispatch({\n        type: GLOBALTYPES.ALERT,\n        payload: {\n          error: err.response.data.msg\n        }\n      });\n    }\n  };\n\n  const handleAddUser = user => {\n    setSearch(\"\");\n    setSearchUsers([]);\n    dispatch({\n      type: MESS_TYPES.ADD_USER,\n      payload: { ...user,\n        text: \"\",\n        media: []\n      }\n    });\n    dispatch({\n      type: MESS_TYPES.CHECK_ONLINE_OFFLINE,\n      payload: online\n    });\n    return history.push(`/message/${user._id}`);\n  };\n\n  const isActive = user => {\n    if (id === user._id) return \"active\";\n    return \"\";\n  };\n\n  useEffect(() => {\n    if (message.firstLoad) return;\n    dispatch(getConversations({\n      auth\n    }));\n  }, [dispatch, auth, message.firstLoad]); // Load More\n\n  useEffect(() => {\n    const observer = new IntersectionObserver(entries => {\n      if (entries[0].isIntersecting) {\n        setPage(p => p + 1);\n      }\n    }, {\n      threshold: 0.1\n    });\n    observer.observe(pageEnd.current);\n  }, [setPage]);\n  useEffect(() => {\n    if (message.resultUsers >= (page - 1) * 9 && page > 1) {\n      dispatch(getConversations({\n        auth,\n        page\n      }));\n    }\n  }, [message.resultUsers, page, auth, dispatch]); // Check User Online - Offline\n\n  useEffect(() => {\n    if (message.firstLoad) {\n      dispatch({\n        type: MESS_TYPES.CHECK_ONLINE_OFFLINE,\n        payload: online\n      });\n    }\n  }, [online, message.firstLoad, dispatch]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"message_header\",\n      onSubmit: handleSearch,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: search,\n        placeholder: \"Nh\\u1EADp \\u0111\\u1EC3 t\\xECm ki\\u1EBFm...\",\n        onChange: e => setSearch(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        style: {\n          display: \"none\"\n        },\n        children: \"T\\xECm ki\\u1EBFm\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"message_chat_list\",\n      children: [searchUsers.length !== 0 ? /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: searchUsers.map(user => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `message_user ${isActive(user)}`,\n          onClick: () => handleAddUser(user),\n          children: /*#__PURE__*/_jsxDEV(UserCard, {\n            user: user\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 17\n          }, this)\n        }, user._id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 15\n        }, this))\n      }, void 0, false) : /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: message.users.map(user => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `message_user ${isActive(user)}`,\n          onClick: () => handleAddUser(user),\n          children: /*#__PURE__*/_jsxDEV(UserCard, {\n            user: user,\n            msg: true,\n            children: user.online ? /*#__PURE__*/_jsxDEV(\"i\", {\n              className: \"fas fa-circle text-success\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 128,\n              columnNumber: 21\n            }, this) : auth.user.following.find(item => item._id === user._id) && /*#__PURE__*/_jsxDEV(\"i\", {\n              className: \"fas fa-circle\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 132,\n              columnNumber: 26\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 126,\n            columnNumber: 17\n          }, this)\n        }, user._id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 15\n        }, this))\n      }, void 0, false), /*#__PURE__*/_jsxDEV(\"button\", {\n        ref: pageEnd,\n        style: {\n          opacity: 0\n        },\n        children: \"Xem th\\xEAm\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(LeftSide, \"jr8fWmxnXPXVscDtEq/jdTLYipQ=\", false, function () {\n  return [useSelector, useDispatch, useHistory, useParams];\n});\n\n_c = LeftSide;\nexport default LeftSide;\n\nvar _c;\n\n$RefreshReg$(_c, \"LeftSide\");","map":{"version":3,"sources":["C:/Users/buiva/OneDrive/Máy tính/new/instagram-clone/client/src/components/message/LeftSide.js"],"names":["React","useState","useEffect","useRef","UserCard","useSelector","useDispatch","getDataAPI","GLOBALTYPES","useHistory","useParams","MESS_TYPES","getConversations","LeftSide","auth","message","online","state","dispatch","search","setSearch","searchUsers","setSearchUsers","history","id","pageEnd","page","setPage","handleSearch","e","preventDefault","res","token","data","users","err","type","ALERT","payload","error","response","msg","handleAddUser","user","ADD_USER","text","media","CHECK_ONLINE_OFFLINE","push","_id","isActive","firstLoad","observer","IntersectionObserver","entries","isIntersecting","p","threshold","observe","current","resultUsers","target","value","display","length","map","following","find","item","opacity"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\r\nimport UserCard from \"../UserCard\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { getDataAPI } from \"../../utils/fetchData\";\r\nimport { GLOBALTYPES } from \"../../redux/actions/globalTypes\";\r\nimport { useHistory, useParams } from \"react-router-dom\";\r\nimport {\r\n  MESS_TYPES,\r\n  getConversations,\r\n} from \"../../redux/actions/messageAction\";\r\n\r\nconst LeftSide = () => {\r\n  const { auth, message, online } = useSelector((state) => state);\r\n  const dispatch = useDispatch();\r\n\r\n  const [search, setSearch] = useState(\"\");\r\n  const [searchUsers, setSearchUsers] = useState([]);\r\n\r\n  const history = useHistory();\r\n  const { id } = useParams();\r\n\r\n  const pageEnd = useRef();\r\n  const [page, setPage] = useState(0);\r\n\r\n  const handleSearch = async (e) => {\r\n    e.preventDefault();\r\n    if (!search) return setSearchUsers([]);\r\n\r\n    try {\r\n      const res = await getDataAPI(`search?username=${search}`, auth.token);\r\n      setSearchUsers(res.data.users);\r\n    } catch (err) {\r\n      dispatch({\r\n        type: GLOBALTYPES.ALERT,\r\n        payload: { error: err.response.data.msg },\r\n      });\r\n    }\r\n  };\r\n\r\n  const handleAddUser = (user) => {\r\n    setSearch(\"\");\r\n    setSearchUsers([]);\r\n    dispatch({\r\n      type: MESS_TYPES.ADD_USER,\r\n      payload: { ...user, text: \"\", media: [] },\r\n    });\r\n    dispatch({ type: MESS_TYPES.CHECK_ONLINE_OFFLINE, payload: online });\r\n    return history.push(`/message/${user._id}`);\r\n  };\r\n\r\n  const isActive = (user) => {\r\n    if (id === user._id) return \"active\";\r\n    return \"\";\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (message.firstLoad) return;\r\n    dispatch(getConversations({ auth }));\r\n  }, [dispatch, auth, message.firstLoad]);\r\n\r\n  // Load More\r\n  useEffect(() => {\r\n    const observer = new IntersectionObserver(\r\n      (entries) => {\r\n        if (entries[0].isIntersecting) {\r\n          setPage((p) => p + 1);\r\n        }\r\n      },\r\n      {\r\n        threshold: 0.1,\r\n      }\r\n    );\r\n\r\n    observer.observe(pageEnd.current);\r\n  }, [setPage]);\r\n\r\n  useEffect(() => {\r\n    if (message.resultUsers >= (page - 1) * 9 && page > 1) {\r\n      dispatch(getConversations({ auth, page }));\r\n    }\r\n  }, [message.resultUsers, page, auth, dispatch]);\r\n\r\n  // Check User Online - Offline\r\n  useEffect(() => {\r\n    if (message.firstLoad) {\r\n      dispatch({ type: MESS_TYPES.CHECK_ONLINE_OFFLINE, payload: online });\r\n    }\r\n  }, [online, message.firstLoad, dispatch]);\r\n\r\n  return (\r\n    <>\r\n      <form className=\"message_header\" onSubmit={handleSearch}>\r\n        <input\r\n          type=\"text\"\r\n          value={search}\r\n          placeholder=\"Nhập để tìm kiếm...\"\r\n          onChange={(e) => setSearch(e.target.value)}\r\n        />\r\n\r\n        <button type=\"submit\" style={{ display: \"none\" }}>\r\n          Tìm kiếm\r\n        </button>\r\n      </form>\r\n\r\n      <div className=\"message_chat_list\">\r\n        {searchUsers.length !== 0 ? (\r\n          <>\r\n            {searchUsers.map((user) => (\r\n              <div\r\n                key={user._id}\r\n                className={`message_user ${isActive(user)}`}\r\n                onClick={() => handleAddUser(user)}\r\n              >\r\n                <UserCard user={user} />\r\n              </div>\r\n            ))}\r\n          </>\r\n        ) : (\r\n          <>\r\n            {message.users.map((user) => (\r\n              <div\r\n                key={user._id}\r\n                className={`message_user ${isActive(user)}`}\r\n                onClick={() => handleAddUser(user)}\r\n              >\r\n                <UserCard user={user} msg={true}>\r\n                  {user.online ? (\r\n                    <i className=\"fas fa-circle text-success\" />\r\n                  ) : (\r\n                    auth.user.following.find(\r\n                      (item) => item._id === user._id\r\n                    ) && <i className=\"fas fa-circle\" />\r\n                  )}\r\n                </UserCard>\r\n              </div>\r\n            ))}\r\n          </>\r\n        )}\r\n\r\n        <button ref={pageEnd} style={{ opacity: 0 }}>\r\n          Xem thêm\r\n        </button>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default LeftSide;\r\n"]},"metadata":{},"sourceType":"module"}