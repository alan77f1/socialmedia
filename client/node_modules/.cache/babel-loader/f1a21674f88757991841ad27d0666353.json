{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\buiva\\\\OneDrive\\\\M\\xE1y t\\xEDnh\\\\new\\\\instagram-clone\\\\client\\\\src\\\\pages\\\\resetPassword.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { useHistory } from \"react-router-dom\"; // import { resetPassword } from \"../redux/actions/authAction\";\n\nimport { postDataAPI } from \"../utils/fetchData\";\nimport { GLOBALTYPES } from \"../redux/actions/globalTypes\";\nimport validReset from \"../utils/validreset\";\n\nfunction ResetPassword() {\n  _s();\n\n  const {\n    token\n  } = useParams();\n  const {\n    auth,\n    alert\n  } = useSelector(state => state); // const dispatch = useDispatch();\n\n  const history = useHistory();\n  const initialState = {\n    password: \"\",\n    cf_password: \"\"\n  };\n  const [typePass, setTypePass] = useState(false);\n  const [typeCfPass, setTypeCfPass] = useState(false);\n  const [data, setData] = useState(initialState);\n  const {\n    password,\n    cf_password\n  } = data;\n  useEffect(() => {\n    if (auth.token) history.push(\"/\");\n  }, [auth.token, history]);\n\n  const handleChangeInput = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setData({ ...data,\n      [name]: value,\n      err: \"\",\n      success: \"\"\n    });\n  };\n\n  const handleSubmit = async dispatch => {\n    // e.preventDefault();\n    const check = validReset(data);\n    if (check.errLength > 0) return dispatch({\n      type: GLOBALTYPES.ALERT,\n      payload: check.errMsg\n    });\n\n    try {\n      const res = await postDataAPI(\"reset\", data, token);\n      setData({ ...data\n      });\n      dispatch({\n        type: GLOBALTYPES.ALERT,\n        payload: {\n          success: res.data.msg\n        }\n      });\n    } catch (err) {\n      dispatch({\n        type: GLOBALTYPES.ALERT,\n        payload: {\n          error: err.response.data.msg\n        }\n      });\n    } // dispatch(resetPassword(data, token));\n\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"auth_page\",\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"text-uppercase text-center mb-4\",\n        children: \"UTC2-NETWORK\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n          className: \"text-uppercase text-center mb-4\",\n          children: \"\\u0110\\u1EB7t L\\u1EA1i M\\u1EADt Kh\\u1EA9u\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"exampleInputPassword1\",\n          children: \"M\\u1EADt Kh\\u1EA9u\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"pass\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: typePass ? \"text\" : \"password\",\n            className: \"form-control\",\n            id: \"exampleInputPassword1\",\n            onChange: handleChangeInput,\n            value: password,\n            name: \"password\",\n            style: {\n              background: `${alert.password ? \"#fd2d6a14\" : \"\"}`\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n            onClick: () => setTypePass(!typePass),\n            children: typePass ? \"Hide\" : \"Show\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n          className: \"form-text text-danger\",\n          children: alert.password ? alert.password : \"\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"cf_password\",\n          children: \"Nh\\u1EADp L\\u1EA1i M\\u1EADt Kh\\u1EA9u\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"pass\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: typeCfPass ? \"text\" : \"password\",\n            className: \"form-control\",\n            id: \"cf_password\",\n            onChange: handleChangeInput,\n            value: cf_password,\n            name: \"cf_password\",\n            style: {\n              background: `${alert.cf_password ? \"#fd2d6a14\" : \"\"}`\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n            onClick: () => setTypeCfPass(!typeCfPass),\n            children: typeCfPass ? \"Hide\" : \"Show\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n          className: \"form-text text-danger\",\n          children: alert.cf_password ? alert.cf_password : \"\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"btn btn-dark w-100\",\n        children: \"Ho\\xE0n Th\\xE0nh\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 5\n  }, this);\n}\n\n_s(ResetPassword, \"tDOdj0TnZX/HQBDUs0GgdeFGZ70=\", false, function () {\n  return [useParams, useSelector, useHistory];\n});\n\n_c = ResetPassword;\nexport default ResetPassword;\n\nvar _c;\n\n$RefreshReg$(_c, \"ResetPassword\");","map":{"version":3,"sources":["C:/Users/buiva/OneDrive/Máy tính/new/instagram-clone/client/src/pages/resetPassword.js"],"names":["React","useState","useEffect","useParams","useSelector","useDispatch","useHistory","postDataAPI","GLOBALTYPES","validReset","ResetPassword","token","auth","alert","state","history","initialState","password","cf_password","typePass","setTypePass","typeCfPass","setTypeCfPass","data","setData","push","handleChangeInput","e","name","value","target","err","success","handleSubmit","dispatch","check","errLength","type","ALERT","payload","errMsg","res","msg","error","response","background"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\n// import { resetPassword } from \"../redux/actions/authAction\";\r\nimport { postDataAPI } from \"../utils/fetchData\";\r\nimport { GLOBALTYPES } from \"../redux/actions/globalTypes\";\r\nimport validReset from \"../utils/validreset\";\r\n\r\nfunction ResetPassword() {\r\n  const { token } = useParams();\r\n  const { auth, alert } = useSelector((state) => state);\r\n  // const dispatch = useDispatch();\r\n  const history = useHistory();\r\n  const initialState = {\r\n    password: \"\",\r\n    cf_password: \"\",\r\n  };\r\n\r\n  const [typePass, setTypePass] = useState(false);\r\n  const [typeCfPass, setTypeCfPass] = useState(false);\r\n\r\n  const [data, setData] = useState(initialState);\r\n\r\n  const { password, cf_password } = data;\r\n  useEffect(() => {\r\n    if (auth.token) history.push(\"/\");\r\n  }, [auth.token, history]);\r\n\r\n  const handleChangeInput = (e) => {\r\n    const { name, value } = e.target;\r\n    setData({ ...data, [name]: value, err: \"\", success: \"\" });\r\n  };\r\n  const handleSubmit = async (dispatch) => {\r\n    // e.preventDefault();\r\n    const check = validReset(data);\r\n    if (check.errLength > 0)\r\n      return dispatch({ type: GLOBALTYPES.ALERT, payload: check.errMsg });\r\n    try {\r\n      const res = await postDataAPI(\"reset\", data, token);\r\n      setData({ ...data });\r\n      dispatch({\r\n        type: GLOBALTYPES.ALERT,\r\n        payload: {\r\n          success: res.data.msg,\r\n        },\r\n      });\r\n    } catch (err) {\r\n      dispatch({\r\n        type: GLOBALTYPES.ALERT,\r\n        payload: {\r\n          error: err.response.data.msg,\r\n        },\r\n      });\r\n    }\r\n\r\n    // dispatch(resetPassword(data, token));\r\n  };\r\n\r\n  return (\r\n    <div className=\"auth_page\">\r\n      <form onSubmit={handleSubmit}>\r\n        <h3 className=\"text-uppercase text-center mb-4\">UTC2-NETWORK</h3>\r\n\r\n        <div className=\"form-group\">\r\n          <h5 className=\"text-uppercase text-center mb-4\">Đặt Lại Mật Khẩu</h5>\r\n\r\n          <label htmlFor=\"exampleInputPassword1\">Mật Khẩu</label>\r\n\r\n          <div className=\"pass\">\r\n            <input\r\n              type={typePass ? \"text\" : \"password\"}\r\n              className=\"form-control\"\r\n              id=\"exampleInputPassword1\"\r\n              onChange={handleChangeInput}\r\n              value={password}\r\n              name=\"password\"\r\n              style={{ background: `${alert.password ? \"#fd2d6a14\" : \"\"}` }}\r\n            />\r\n\r\n            <small onClick={() => setTypePass(!typePass)}>\r\n              {typePass ? \"Hide\" : \"Show\"}\r\n            </small>\r\n          </div>\r\n\r\n          <small className=\"form-text text-danger\">\r\n            {alert.password ? alert.password : \"\"}\r\n          </small>\r\n        </div>\r\n\r\n        <div className=\"form-group\">\r\n          <label htmlFor=\"cf_password\">Nhập Lại Mật Khẩu</label>\r\n\r\n          <div className=\"pass\">\r\n            <input\r\n              type={typeCfPass ? \"text\" : \"password\"}\r\n              className=\"form-control\"\r\n              id=\"cf_password\"\r\n              onChange={handleChangeInput}\r\n              value={cf_password}\r\n              name=\"cf_password\"\r\n              style={{ background: `${alert.cf_password ? \"#fd2d6a14\" : \"\"}` }}\r\n            />\r\n\r\n            <small onClick={() => setTypeCfPass(!typeCfPass)}>\r\n              {typeCfPass ? \"Hide\" : \"Show\"}\r\n            </small>\r\n          </div>\r\n\r\n          <small className=\"form-text text-danger\">\r\n            {alert.cf_password ? alert.cf_password : \"\"}\r\n          </small>\r\n        </div>\r\n        <button type=\"submit\" className=\"btn btn-dark w-100\">\r\n          Hoàn Thành\r\n        </button>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ResetPassword;\r\n"]},"metadata":{},"sourceType":"module"}