{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\buiva\\\\OneDrive\\\\M\\xE1y t\\xEDnh\\\\new\\\\instagram-clone\\\\client\\\\src\\\\SocketClient.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useRef } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { POST_TYPES } from \"./redux/actions/postAction\";\nimport { GLOBALTYPES } from \"./redux/actions/globalTypes\";\nimport { NOTIFY_TYPES } from \"./redux/actions/notifyAction\";\nimport { MESS_TYPES } from \"./redux/actions/messageAction\";\nimport audiobell from \"./audio/got-it-done-613.mp3\";\n\nconst spawnNotification = (body, icon, url, title) => {\n  let options = {\n    body,\n    icon\n  };\n  let n = new Notification(title, options);\n\n  n.onclick = e => {\n    e.preventDefault();\n    window.open(url, \"_blank\");\n  };\n};\n\nconst SocketClient = () => {\n  _s();\n\n  const {\n    auth,\n    socket,\n    notify,\n    online,\n    call\n  } = useSelector(state => state);\n  const dispatch = useDispatch();\n  const audioRef = useRef(); // joinUser\n\n  useEffect(() => {\n    socket.emit(\"joinUser\", auth.user);\n  }, [socket, auth.user]); // Likes\n\n  useEffect(() => {\n    socket.on(\"likeToClient\", newPost => {\n      dispatch({\n        type: POST_TYPES.UPDATE_POST,\n        payload: newPost\n      });\n    });\n    return () => socket.off(\"likeToClient\");\n  }, [socket, dispatch]);\n  useEffect(() => {\n    socket.on(\"unLikeToClient\", newPost => {\n      dispatch({\n        type: POST_TYPES.UPDATE_POST,\n        payload: newPost\n      });\n    });\n    return () => socket.off(\"unLikeToClient\");\n  }, [socket, dispatch]); // Comments\n\n  useEffect(() => {\n    socket.on(\"createCommentToClient\", newPost => {\n      dispatch({\n        type: POST_TYPES.UPDATE_POST,\n        payload: newPost\n      });\n    });\n    return () => socket.off(\"createCommentToClient\");\n  }, [socket, dispatch]);\n  useEffect(() => {\n    socket.on(\"deleteCommentToClient\", newPost => {\n      dispatch({\n        type: POST_TYPES.UPDATE_POST,\n        payload: newPost\n      });\n    });\n    return () => socket.off(\"deleteCommentToClient\");\n  }, [socket, dispatch]); // Follow\n\n  useEffect(() => {\n    socket.on(\"followToClient\", newUser => {\n      dispatch({\n        type: GLOBALTYPES.AUTH,\n        payload: { ...auth,\n          user: newUser\n        }\n      });\n    });\n    return () => socket.off(\"followToClient\");\n  }, [socket, dispatch, auth]);\n  useEffect(() => {\n    socket.on(\"unFollowToClient\", newUser => {\n      dispatch({\n        type: GLOBALTYPES.AUTH,\n        payload: { ...auth,\n          user: newUser\n        }\n      });\n    });\n    return () => socket.off(\"unFollowToClient\");\n  }, [socket, dispatch, auth]); // Notification\n\n  useEffect(() => {\n    socket.on(\"createNotifyToClient\", msg => {\n      dispatch({\n        type: NOTIFY_TYPES.CREATE_NOTIFY,\n        payload: msg\n      });\n      if (notify.sound) audioRef.current.play();\n      spawnNotification(msg.user.username + \" \" + msg.text, msg.user.avatar, msg.url, \"UTC2-NETWORK\");\n    });\n    return () => socket.off(\"createNotifyToClient\");\n  }, [socket, dispatch, notify.sound]);\n  useEffect(() => {\n    socket.on(\"removeNotifyToClient\", msg => {\n      dispatch({\n        type: NOTIFY_TYPES.REMOVE_NOTIFY,\n        payload: msg\n      });\n    });\n    return () => socket.off(\"removeNotifyToClient\");\n  }, [socket, dispatch]); // Message\n\n  useEffect(() => {\n    socket.on(\"addMessageToClient\", msg => {\n      dispatch({\n        type: MESS_TYPES.ADD_MESSAGE,\n        payload: msg\n      });\n      dispatch({\n        type: MESS_TYPES.ADD_USER,\n        payload: { ...msg.user,\n          text: msg.text,\n          media: msg.media\n        }\n      });\n    });\n    return () => socket.off(\"addMessageToClient\");\n  }, [socket, dispatch]); // Check User Online / Offline\n\n  useEffect(() => {\n    socket.emit(\"checkUserOnline\", auth.user);\n  }, [socket, auth.user]);\n  useEffect(() => {\n    socket.on(\"checkUserOnlineToMe\", data => {\n      data.forEach(item => {\n        if (!online.includes(item.id)) {\n          dispatch({\n            type: GLOBALTYPES.ONLINE,\n            payload: item.id\n          });\n        }\n      });\n    });\n    return () => socket.off(\"checkUserOnlineToMe\");\n  }, [socket, dispatch, online]);\n  useEffect(() => {\n    socket.on(\"checkUserOnlineToClient\", id => {\n      if (!online.includes(id)) {\n        dispatch({\n          type: GLOBALTYPES.ONLINE,\n          payload: id\n        });\n      }\n    });\n    return () => socket.off(\"checkUserOnlineToClient\");\n  }, [socket, dispatch, online]); // Check User Offline\n\n  useEffect(() => {\n    socket.on(\"CheckUserOffline\", id => {\n      dispatch({\n        type: GLOBALTYPES.OFFLINE,\n        payload: id\n      });\n    });\n    return () => socket.off(\"CheckUserOffline\");\n  }, [socket, dispatch]); // Call User\n\n  useEffect(() => {\n    socket.on(\"callUserToClient\", data => {\n      dispatch({\n        type: GLOBALTYPES.CALL,\n        payload: data\n      });\n    });\n    return () => socket.off(\"callUserToClient\");\n  }, [socket, dispatch]);\n  useEffect(() => {\n    socket.on(\"userBusy\", data => {\n      dispatch({\n        type: GLOBALTYPES.ALERT,\n        payload: {\n          error: `${call.username} is busy!`\n        }\n      });\n    });\n    return () => socket.off(\"userBusy\");\n  }, [socket, dispatch, call]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"audio\", {\n      controls: true,\n      ref: audioRef,\n      style: {\n        display: \"none\"\n      },\n      children: /*#__PURE__*/_jsxDEV(\"source\", {\n        src: audiobell,\n        type: \"audio/mp3\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 186,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n\n_s(SocketClient, \"4KG/axElejuIqcaMhis5ouSp56E=\", false, function () {\n  return [useSelector, useDispatch];\n});\n\n_c = SocketClient;\nexport default SocketClient;\n\nvar _c;\n\n$RefreshReg$(_c, \"SocketClient\");","map":{"version":3,"sources":["C:/Users/buiva/OneDrive/Máy tính/new/instagram-clone/client/src/SocketClient.js"],"names":["React","useEffect","useRef","useSelector","useDispatch","POST_TYPES","GLOBALTYPES","NOTIFY_TYPES","MESS_TYPES","audiobell","spawnNotification","body","icon","url","title","options","n","Notification","onclick","e","preventDefault","window","open","SocketClient","auth","socket","notify","online","call","state","dispatch","audioRef","emit","user","on","newPost","type","UPDATE_POST","payload","off","newUser","AUTH","msg","CREATE_NOTIFY","sound","current","play","username","text","avatar","REMOVE_NOTIFY","ADD_MESSAGE","ADD_USER","media","data","forEach","item","includes","id","ONLINE","OFFLINE","CALL","ALERT","error","display"],"mappings":"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","sourcesContent":["import React, { useEffect, useRef } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { POST_TYPES } from \"./redux/actions/postAction\";\r\nimport { GLOBALTYPES } from \"./redux/actions/globalTypes\";\r\nimport { NOTIFY_TYPES } from \"./redux/actions/notifyAction\";\r\nimport { MESS_TYPES } from \"./redux/actions/messageAction\";\r\n\r\nimport audiobell from \"./audio/got-it-done-613.mp3\";\r\n\r\nconst spawnNotification = (body, icon, url, title) => {\r\n  let options = {\r\n    body,\r\n    icon,\r\n  };\r\n  let n = new Notification(title, options);\r\n\r\n  n.onclick = (e) => {\r\n    e.preventDefault();\r\n    window.open(url, \"_blank\");\r\n  };\r\n};\r\n\r\nconst SocketClient = () => {\r\n  const { auth, socket, notify, online, call } = useSelector((state) => state);\r\n  const dispatch = useDispatch();\r\n\r\n  const audioRef = useRef();\r\n\r\n  // joinUser\r\n  useEffect(() => {\r\n    socket.emit(\"joinUser\", auth.user);\r\n  }, [socket, auth.user]);\r\n\r\n  // Likes\r\n  useEffect(() => {\r\n    socket.on(\"likeToClient\", (newPost) => {\r\n      dispatch({ type: POST_TYPES.UPDATE_POST, payload: newPost });\r\n    });\r\n\r\n    return () => socket.off(\"likeToClient\");\r\n  }, [socket, dispatch]);\r\n\r\n  useEffect(() => {\r\n    socket.on(\"unLikeToClient\", (newPost) => {\r\n      dispatch({ type: POST_TYPES.UPDATE_POST, payload: newPost });\r\n    });\r\n\r\n    return () => socket.off(\"unLikeToClient\");\r\n  }, [socket, dispatch]);\r\n\r\n  // Comments\r\n  useEffect(() => {\r\n    socket.on(\"createCommentToClient\", (newPost) => {\r\n      dispatch({ type: POST_TYPES.UPDATE_POST, payload: newPost });\r\n    });\r\n\r\n    return () => socket.off(\"createCommentToClient\");\r\n  }, [socket, dispatch]);\r\n\r\n  useEffect(() => {\r\n    socket.on(\"deleteCommentToClient\", (newPost) => {\r\n      dispatch({ type: POST_TYPES.UPDATE_POST, payload: newPost });\r\n    });\r\n\r\n    return () => socket.off(\"deleteCommentToClient\");\r\n  }, [socket, dispatch]);\r\n\r\n  // Follow\r\n  useEffect(() => {\r\n    socket.on(\"followToClient\", (newUser) => {\r\n      dispatch({ type: GLOBALTYPES.AUTH, payload: { ...auth, user: newUser } });\r\n    });\r\n\r\n    return () => socket.off(\"followToClient\");\r\n  }, [socket, dispatch, auth]);\r\n\r\n  useEffect(() => {\r\n    socket.on(\"unFollowToClient\", (newUser) => {\r\n      dispatch({ type: GLOBALTYPES.AUTH, payload: { ...auth, user: newUser } });\r\n    });\r\n\r\n    return () => socket.off(\"unFollowToClient\");\r\n  }, [socket, dispatch, auth]);\r\n\r\n  // Notification\r\n  useEffect(() => {\r\n    socket.on(\"createNotifyToClient\", (msg) => {\r\n      dispatch({ type: NOTIFY_TYPES.CREATE_NOTIFY, payload: msg });\r\n\r\n      if (notify.sound) audioRef.current.play();\r\n      spawnNotification(\r\n        msg.user.username + \" \" + msg.text,\r\n        msg.user.avatar,\r\n        msg.url,\r\n        \"UTC2-NETWORK\"\r\n      );\r\n    });\r\n\r\n    return () => socket.off(\"createNotifyToClient\");\r\n  }, [socket, dispatch, notify.sound]);\r\n\r\n  useEffect(() => {\r\n    socket.on(\"removeNotifyToClient\", (msg) => {\r\n      dispatch({ type: NOTIFY_TYPES.REMOVE_NOTIFY, payload: msg });\r\n    });\r\n\r\n    return () => socket.off(\"removeNotifyToClient\");\r\n  }, [socket, dispatch]);\r\n\r\n  // Message\r\n  useEffect(() => {\r\n    socket.on(\"addMessageToClient\", (msg) => {\r\n      dispatch({ type: MESS_TYPES.ADD_MESSAGE, payload: msg });\r\n\r\n      dispatch({\r\n        type: MESS_TYPES.ADD_USER,\r\n        payload: {\r\n          ...msg.user,\r\n          text: msg.text,\r\n          media: msg.media,\r\n        },\r\n      });\r\n    });\r\n\r\n    return () => socket.off(\"addMessageToClient\");\r\n  }, [socket, dispatch]);\r\n\r\n  // Check User Online / Offline\r\n  useEffect(() => {\r\n    socket.emit(\"checkUserOnline\", auth.user);\r\n  }, [socket, auth.user]);\r\n\r\n  useEffect(() => {\r\n    socket.on(\"checkUserOnlineToMe\", (data) => {\r\n      data.forEach((item) => {\r\n        if (!online.includes(item.id)) {\r\n          dispatch({ type: GLOBALTYPES.ONLINE, payload: item.id });\r\n        }\r\n      });\r\n    });\r\n\r\n    return () => socket.off(\"checkUserOnlineToMe\");\r\n  }, [socket, dispatch, online]);\r\n\r\n  useEffect(() => {\r\n    socket.on(\"checkUserOnlineToClient\", (id) => {\r\n      if (!online.includes(id)) {\r\n        dispatch({ type: GLOBALTYPES.ONLINE, payload: id });\r\n      }\r\n    });\r\n\r\n    return () => socket.off(\"checkUserOnlineToClient\");\r\n  }, [socket, dispatch, online]);\r\n\r\n  // Check User Offline\r\n  useEffect(() => {\r\n    socket.on(\"CheckUserOffline\", (id) => {\r\n      dispatch({ type: GLOBALTYPES.OFFLINE, payload: id });\r\n    });\r\n\r\n    return () => socket.off(\"CheckUserOffline\");\r\n  }, [socket, dispatch]);\r\n\r\n  // Call User\r\n  useEffect(() => {\r\n    socket.on(\"callUserToClient\", (data) => {\r\n      dispatch({ type: GLOBALTYPES.CALL, payload: data });\r\n    });\r\n\r\n    return () => socket.off(\"callUserToClient\");\r\n  }, [socket, dispatch]);\r\n\r\n  useEffect(() => {\r\n    socket.on(\"userBusy\", (data) => {\r\n      dispatch({\r\n        type: GLOBALTYPES.ALERT,\r\n        payload: { error: `${call.username} is busy!` },\r\n      });\r\n    });\r\n\r\n    return () => socket.off(\"userBusy\");\r\n  }, [socket, dispatch, call]);\r\n\r\n  return (\r\n    <>\r\n      <audio controls ref={audioRef} style={{ display: \"none\" }}>\r\n        <source src={audiobell} type=\"audio/mp3\" />\r\n      </audio>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default SocketClient;\r\n"]},"metadata":{},"sourceType":"module"}