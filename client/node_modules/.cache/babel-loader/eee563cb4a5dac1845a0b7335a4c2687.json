{"ast":null,"code":"import { GLOBALTYPES } from \"./globalTypes\";\nimport { postDataAPI } from \"../../utils/fetchData\";\nimport valid from \"../../utils/valid\";\nexport const login = data => async dispatch => {\n  try {\n    dispatch({\n      type: GLOBALTYPES.ALERT,\n      payload: {\n        loading: true\n      }\n    });\n    const res = await postDataAPI(\"login\", data);\n    dispatch({\n      type: GLOBALTYPES.AUTH,\n      payload: {\n        token: res.data.access_token,\n        user: res.data.user\n      }\n    });\n    localStorage.setItem(\"firstLogin\", true);\n    dispatch({\n      type: GLOBALTYPES.ALERT,\n      payload: {\n        success: res.data.msg\n      }\n    });\n  } catch (err) {\n    dispatch({\n      type: GLOBALTYPES.ALERT,\n      payload: {\n        error: err.response.data.msg\n      }\n    });\n  }\n};\nexport const refreshToken = () => async dispatch => {\n  const firstLogin = localStorage.getItem(\"firstLogin\");\n\n  if (firstLogin) {\n    dispatch({\n      type: GLOBALTYPES.ALERT,\n      payload: {\n        loading: true\n      }\n    });\n\n    try {\n      const res = await postDataAPI(\"refresh_token\");\n      dispatch({\n        type: GLOBALTYPES.AUTH,\n        payload: {\n          token: res.data.access_token,\n          user: res.data.user\n        }\n      });\n      dispatch({\n        type: GLOBALTYPES.ALERT,\n        payload: {}\n      });\n    } catch (err) {\n      dispatch({\n        type: GLOBALTYPES.ALERT,\n        payload: {\n          error: err.response.data.msg\n        }\n      });\n    }\n  }\n};\nexport const register = data => async dispatch => {\n  const check = valid(data);\n  if (check.errLength > 0) return dispatch({\n    type: GLOBALTYPES.ALERT,\n    payload: check.errMsg\n  });\n\n  try {\n    dispatch({\n      type: GLOBALTYPES.ALERT,\n      payload: {\n        loading: true\n      }\n    });\n    const res = await postDataAPI(\"register\", data);\n    dispatch({\n      type: GLOBALTYPES.AUTH,\n      payload: {\n        token: res.data.access_token,\n        user: res.data.user\n      }\n    });\n    localStorage.setItem(\"firstLogin\", true);\n    dispatch({\n      type: GLOBALTYPES.ALERT,\n      payload: {\n        success: res.data.msg\n      }\n    });\n  } catch (err) {\n    dispatch({\n      type: GLOBALTYPES.ALERT,\n      payload: {\n        error: err.response.data.msg\n      }\n    });\n  }\n};\nexport const forgotPassword = data => async dispatch => {\n  try {\n    dispatch({\n      type: GLOBALTYPES.ALERT,\n      payload: {\n        loading: true\n      }\n    });\n    const res = await postDataAPI(\"forgot\", data);\n    dispatch({\n      type: GLOBALTYPES.AUTH,\n      payload: {\n        token: res.data.access_token,\n        user: res.data.user\n      }\n    });\n    dispatch({\n      type: GLOBALTYPES.ALERT,\n      payload: {\n        success: res.data.msg\n      }\n    });\n  } catch (err) {\n    dispatch({\n      type: GLOBALTYPES.ALERT,\n      payload: {\n        error: err.response.data.msg\n      }\n    });\n  }\n}; // export const resetPassword = (data, token) => async (dispatch) => {\n//   const check = valid(data);\n//   if (check.errLength > 0)\n//     return dispatch({ type: GLOBALTYPES.ALERT, payload: check.errMsg });\n//   try {\n//     dispatch({ type: GLOBALTYPES.ALERT, payload: { loading: true } });\n//     const res = await postDataAPI(\"reset\", data, token);\n//     dispatch({\n//       type: GLOBALTYPES.AUTH,\n//       payload: {\n//         token: res.data.access_token,\n//         user: res.data.user,\n//       },\n//     });\n//     dispatch({\n//       type: GLOBALTYPES.ALERT,\n//       payload: {\n//         success: res.data.msg,\n//       },\n//     });\n//   } catch (err) {\n//     dispatch({\n//       type: GLOBALTYPES.ALERT,\n//       payload: {\n//         error: err.response.data.msg,\n//       },\n//     });\n//   }\n// };\n\nexport const changePassword = data => async dispatch => {\n  try {\n    dispatch({\n      type: GLOBALTYPES.ALERT,\n      payload: {\n        loading: true\n      }\n    });\n    const res = await postDataAPI(\"change_password\", data);\n    dispatch({\n      type: GLOBALTYPES.AUTH,\n      payload: {\n        token: res.data.access_token,\n        user: res.data.user\n      }\n    });\n    dispatch({\n      type: GLOBALTYPES.ALERT,\n      payload: {\n        success: res.data.msg\n      }\n    });\n  } catch (err) {\n    dispatch({\n      type: GLOBALTYPES.ALERT,\n      payload: {\n        error: err.response.data.msg\n      }\n    });\n  }\n};\nexport const logout = () => async dispatch => {\n  try {\n    localStorage.removeItem(\"firstLogin\");\n    await postDataAPI(\"logout\");\n    window.location.href = \"/\";\n  } catch (err) {\n    dispatch({\n      type: GLOBALTYPES.ALERT,\n      payload: {\n        error: err.response.data.msg\n      }\n    });\n  }\n};","map":{"version":3,"sources":["C:/Users/buiva/OneDrive/Máy tính/new/instagram-clone/client/src/redux/actions/authAction.js"],"names":["GLOBALTYPES","postDataAPI","valid","login","data","dispatch","type","ALERT","payload","loading","res","AUTH","token","access_token","user","localStorage","setItem","success","msg","err","error","response","refreshToken","firstLogin","getItem","register","check","errLength","errMsg","forgotPassword","changePassword","logout","removeItem","window","location","href"],"mappings":"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","sourcesContent":["import { GLOBALTYPES } from \"./globalTypes\";\r\nimport { postDataAPI } from \"../../utils/fetchData\";\r\nimport valid from \"../../utils/valid\";\r\n\r\nexport const login = (data) => async (dispatch) => {\r\n  try {\r\n    dispatch({ type: GLOBALTYPES.ALERT, payload: { loading: true } });\r\n    const res = await postDataAPI(\"login\", data);\r\n    dispatch({\r\n      type: GLOBALTYPES.AUTH,\r\n      payload: {\r\n        token: res.data.access_token,\r\n        user: res.data.user,\r\n      },\r\n    });\r\n\r\n    localStorage.setItem(\"firstLogin\", true);\r\n    dispatch({\r\n      type: GLOBALTYPES.ALERT,\r\n      payload: {\r\n        success: res.data.msg,\r\n      },\r\n    });\r\n  } catch (err) {\r\n    dispatch({\r\n      type: GLOBALTYPES.ALERT,\r\n      payload: {\r\n        error: err.response.data.msg,\r\n      },\r\n    });\r\n  }\r\n};\r\n\r\nexport const refreshToken = () => async (dispatch) => {\r\n  const firstLogin = localStorage.getItem(\"firstLogin\");\r\n  if (firstLogin) {\r\n    dispatch({ type: GLOBALTYPES.ALERT, payload: { loading: true } });\r\n\r\n    try {\r\n      const res = await postDataAPI(\"refresh_token\");\r\n      dispatch({\r\n        type: GLOBALTYPES.AUTH,\r\n        payload: {\r\n          token: res.data.access_token,\r\n          user: res.data.user,\r\n        },\r\n      });\r\n\r\n      dispatch({ type: GLOBALTYPES.ALERT, payload: {} });\r\n    } catch (err) {\r\n      dispatch({\r\n        type: GLOBALTYPES.ALERT,\r\n        payload: {\r\n          error: err.response.data.msg,\r\n        },\r\n      });\r\n    }\r\n  }\r\n};\r\n\r\nexport const register = (data) => async (dispatch) => {\r\n  const check = valid(data);\r\n  if (check.errLength > 0)\r\n    return dispatch({ type: GLOBALTYPES.ALERT, payload: check.errMsg });\r\n\r\n  try {\r\n    dispatch({ type: GLOBALTYPES.ALERT, payload: { loading: true } });\r\n\r\n    const res = await postDataAPI(\"register\", data);\r\n    dispatch({\r\n      type: GLOBALTYPES.AUTH,\r\n      payload: {\r\n        token: res.data.access_token,\r\n        user: res.data.user,\r\n      },\r\n    });\r\n\r\n    localStorage.setItem(\"firstLogin\", true);\r\n    dispatch({\r\n      type: GLOBALTYPES.ALERT,\r\n      payload: {\r\n        success: res.data.msg,\r\n      },\r\n    });\r\n  } catch (err) {\r\n    dispatch({\r\n      type: GLOBALTYPES.ALERT,\r\n      payload: {\r\n        error: err.response.data.msg,\r\n      },\r\n    });\r\n  }\r\n};\r\nexport const forgotPassword = (data) => async (dispatch) => {\r\n  try {\r\n    dispatch({ type: GLOBALTYPES.ALERT, payload: { loading: true } });\r\n    const res = await postDataAPI(\"forgot\", data);\r\n\r\n    dispatch({\r\n      type: GLOBALTYPES.AUTH,\r\n      payload: {\r\n        token: res.data.access_token,\r\n        user: res.data.user,\r\n      },\r\n    });\r\n\r\n    dispatch({\r\n      type: GLOBALTYPES.ALERT,\r\n      payload: {\r\n        success: res.data.msg,\r\n      },\r\n    });\r\n  } catch (err) {\r\n    dispatch({\r\n      type: GLOBALTYPES.ALERT,\r\n      payload: {\r\n        error: err.response.data.msg,\r\n      },\r\n    });\r\n  }\r\n};\r\n// export const resetPassword = (data, token) => async (dispatch) => {\r\n//   const check = valid(data);\r\n//   if (check.errLength > 0)\r\n//     return dispatch({ type: GLOBALTYPES.ALERT, payload: check.errMsg });\r\n//   try {\r\n//     dispatch({ type: GLOBALTYPES.ALERT, payload: { loading: true } });\r\n//     const res = await postDataAPI(\"reset\", data, token);\r\n\r\n//     dispatch({\r\n//       type: GLOBALTYPES.AUTH,\r\n//       payload: {\r\n//         token: res.data.access_token,\r\n//         user: res.data.user,\r\n//       },\r\n//     });\r\n\r\n//     dispatch({\r\n//       type: GLOBALTYPES.ALERT,\r\n//       payload: {\r\n//         success: res.data.msg,\r\n//       },\r\n//     });\r\n//   } catch (err) {\r\n//     dispatch({\r\n//       type: GLOBALTYPES.ALERT,\r\n//       payload: {\r\n//         error: err.response.data.msg,\r\n//       },\r\n//     });\r\n//   }\r\n// };\r\nexport const changePassword = (data) => async (dispatch) => {\r\n  try {\r\n    dispatch({ type: GLOBALTYPES.ALERT, payload: { loading: true } });\r\n    const res = await postDataAPI(\"change_password\", data);\r\n\r\n    dispatch({\r\n      type: GLOBALTYPES.AUTH,\r\n      payload: {\r\n        token: res.data.access_token,\r\n        user: res.data.user,\r\n      },\r\n    });\r\n\r\n    dispatch({\r\n      type: GLOBALTYPES.ALERT,\r\n      payload: {\r\n        success: res.data.msg,\r\n      },\r\n    });\r\n  } catch (err) {\r\n    dispatch({\r\n      type: GLOBALTYPES.ALERT,\r\n      payload: {\r\n        error: err.response.data.msg,\r\n      },\r\n    });\r\n  }\r\n};\r\n\r\nexport const logout = () => async (dispatch) => {\r\n  try {\r\n    localStorage.removeItem(\"firstLogin\");\r\n    await postDataAPI(\"logout\");\r\n    window.location.href = \"/\";\r\n  } catch (err) {\r\n    dispatch({\r\n      type: GLOBALTYPES.ALERT,\r\n      payload: {\r\n        error: err.response.data.msg,\r\n      },\r\n    });\r\n  }\r\n};\r\n"]},"metadata":{},"sourceType":"module"}